diff --git a/base/multi.jl b/base/multi.jl
index 1fa43de..ef60538 100644
--- a/base/multi.jl
+++ b/base/multi.jl
@@ -108,7 +108,18 @@ Worker(host::String, port::Integer, sock::TcpSocket) =
 function Worker(host::String, port::Integer)
     # Connect to the loopback port if requested host has the same ipaddress as self.
     if host == string(LPROC.bind_addr)
-        w = Worker(host, port, connect("127.0.0.1", uint16(port)))
+        try
+            w = Worker(host, port, connect("127.0.0.1", uint16(port)))
+        catch
+            w = Worker(host, port, connect(host, uint16(port)))
+        end
+    elseif host == "127.0.0.1"
+        try
+            w = Worker(host, port, connect(host, uint16(port)))
+        catch
+            host = string(LPROC.bind_addr)
+            w = Worker(host, port, connect(host, uint16(port)))
+        end
     else
         w = Worker(host, port, connect(host, uint16(port)))
     end
@@ -126,10 +137,17 @@ function Worker(host::String, port::Integer)
     w
 end
 function Worker(host::String, bind_addr::String, port::Integer, tunnel_user::String, sshflags)
-    w = Worker(host, port, connect("localhost",
+    try
+        w = Worker(host, port, connect("localhost",
                                ssh_tunnel(tunnel_user, host, bind_addr, uint16(port), sshflags)))
-    w.bind_addr = parseip(bind_addr)
-    w
+        w.bind_addr = parseip(bind_addr)
+        return w
+    catch
+        w = Worker(host, port, connect(LPROC.bind_addr,
+                               ssh_tunnel(tunnel_user, host, bind_addr, uint16(port), sshflags)))
+        w.bind_addr = parseip(bind_addr)
+        return w
+    end
 end
 
 
@@ -973,7 +991,7 @@ function start_worker(out::IO)
     # exit when process 1 shut down. Don't yet know why.
     #redirect_stderr(STDOUT)
 
-    (actual_port,sock) = listenany(uint16(9009))
+    (actual_port,sock) = listenany(uint16(9009),LPROC.bind_addr)
     sock.ccb = accept_handler
     print(out, "julia_worker:")  # print header
     print(out, "$(dec(actual_port))#") # print port
@@ -1023,7 +1041,7 @@ function start_cluster_workers(np::Integer, config::Dict, cman::ClusterManager)
         error("unsupported format from ClusterManager callback")
     end
 
-    for i=1:np
+    for i=1:np        
         (io, bind_addr, port, pubhost, wconfig) = read_cb_response(instances[i])
         ws[i] = create_worker(bind_addr, port, pubhost, io, wconfig, cman.manage)
     end
@@ -1056,7 +1074,6 @@ function create_worker(bind_addr, port, pubhost, stream, config, manage)
             error("USER must be specified either in the environment or as part of the hostname when tunnel option is used")
         end
     end
-
     if tunnel
         sshflags = config[:sshflags]
         w = Worker(pubhost, bind_addr, port, user, sshflags)
@@ -1081,7 +1098,7 @@ function create_worker(bind_addr, port, pubhost, stream, config, manage)
 
     # install a finalizer to perform cleanup if necessary
     finalizer(w, (w)->if myid() == 1 w.manage(w.id, w.config, :finalize) end)
-
+    
     w
 end
 
diff --git a/base/socket.jl b/base/socket.jl
index dc459f7..47bc61c 100644
--- a/base/socket.jl
+++ b/base/socket.jl
@@ -648,8 +648,8 @@ end
 
 ## Utility functions
 
-function listenany(default_port)
-    addr = InetAddr(IPv4(uint32(0)),default_port)
+function listenany(default_port,ip=IPv4(uint32(0)))
+    addr = InetAddr(ip,default_port)
     while true
         sock = TcpServer()
         if bind(sock,addr) && _listen(sock) == 0
